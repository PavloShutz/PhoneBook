// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phone_Book;

#nullable disable

namespace Phone_Book.Migrations
{
    [DbContext(typeof(CallersContext))]
    [Migration("20250408104314_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Phone_Book.Caller", b =>
                {
                    b.Property<int>("CallerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("CallerId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Callers");

                    b.HasData(
                        new
                        {
                            CallerId = 1,
                            CategoryId = 1,
                            Name = "Pasha",
                            Number = "+380-096-123-0001"
                        },
                        new
                        {
                            CallerId = 2,
                            CategoryId = 2,
                            Name = "Olga",
                            Number = "+380-068-987-0002"
                        },
                        new
                        {
                            CallerId = 3,
                            CategoryId = 3,
                            Name = "Ivan",
                            Number = "+380-096-654-0003"
                        },
                        new
                        {
                            CallerId = 4,
                            CategoryId = 4,
                            Name = "Sofia",
                            Number = "+380-068-321-0004"
                        },
                        new
                        {
                            CallerId = 5,
                            CategoryId = 1,
                            Name = "Dmytro",
                            Number = "+380-096-555-0005"
                        },
                        new
                        {
                            CallerId = 6,
                            CategoryId = 2,
                            Name = "Kateryna",
                            Number = "+380-068-789-0006"
                        },
                        new
                        {
                            CallerId = 7,
                            CategoryId = 3,
                            Name = "Andriy",
                            Number = "+380-096-345-0007"
                        },
                        new
                        {
                            CallerId = 8,
                            CategoryId = 4,
                            Name = "Natalia",
                            Number = "+380-068-234-0008"
                        },
                        new
                        {
                            CallerId = 9,
                            CategoryId = 1,
                            Name = "Oleh",
                            Number = "+380-096-876-0009"
                        },
                        new
                        {
                            CallerId = 10,
                            CategoryId = 2,
                            Name = "Mariya",
                            Number = "+380-068-543-0010"
                        },
                        new
                        {
                            CallerId = 11,
                            CategoryId = 3,
                            Name = "Serhiy",
                            Number = "+380-096-432-0011"
                        },
                        new
                        {
                            CallerId = 12,
                            CategoryId = 4,
                            Name = "Yulia",
                            Number = "+380-068-765-0012"
                        },
                        new
                        {
                            CallerId = 13,
                            CategoryId = 1,
                            Name = "Volodymyr",
                            Number = "+380-096-678-0013"
                        },
                        new
                        {
                            CallerId = 14,
                            CategoryId = 2,
                            Name = "Anastasia",
                            Number = "+380-068-890-0014"
                        },
                        new
                        {
                            CallerId = 15,
                            CategoryId = 3,
                            Name = "Bohdan",
                            Number = "+380-096-210-0015"
                        },
                        new
                        {
                            CallerId = 16,
                            CategoryId = 4,
                            Name = "Viktoria",
                            Number = "+380-068-432-0016"
                        },
                        new
                        {
                            CallerId = 17,
                            CategoryId = 1,
                            Name = "Mykola",
                            Number = "+380-096-543-0017"
                        },
                        new
                        {
                            CallerId = 18,
                            CategoryId = 2,
                            Name = "Iryna",
                            Number = "+380-068-654-0018"
                        },
                        new
                        {
                            CallerId = 19,
                            CategoryId = 3,
                            Name = "Taras",
                            Number = "+380-096-765-0019"
                        },
                        new
                        {
                            CallerId = 20,
                            CategoryId = 4,
                            Name = "Liliya",
                            Number = "+380-068-876-0020"
                        },
                        new
                        {
                            CallerId = 21,
                            CategoryId = 1,
                            Name = "Petro",
                            Number = "+380-096-987-0021"
                        },
                        new
                        {
                            CallerId = 22,
                            CategoryId = 2,
                            Name = "Oksana",
                            Number = "+380-068-109-0022"
                        },
                        new
                        {
                            CallerId = 23,
                            CategoryId = 3,
                            Name = "Hanna",
                            Number = "+380-096-218-0023"
                        },
                        new
                        {
                            CallerId = 24,
                            CategoryId = 4,
                            Name = "Ruslan",
                            Number = "+380-068-327-0024"
                        },
                        new
                        {
                            CallerId = 25,
                            CategoryId = 1,
                            Name = "Ludmila",
                            Number = "+380-096-436-0025"
                        },
                        new
                        {
                            CallerId = 26,
                            CategoryId = 2,
                            Name = "Roman",
                            Number = "+380-068-545-0026"
                        },
                        new
                        {
                            CallerId = 27,
                            CategoryId = 3,
                            Name = "Vasyl",
                            Number = "+380-096-654-0027"
                        },
                        new
                        {
                            CallerId = 28,
                            CategoryId = 4,
                            Name = "Oleksii",
                            Number = "+380-068-763-0028"
                        },
                        new
                        {
                            CallerId = 29,
                            CategoryId = 1,
                            Name = "Alina",
                            Number = "+380-096-872-0029"
                        },
                        new
                        {
                            CallerId = 30,
                            CategoryId = 2,
                            Name = "Denys",
                            Number = "+380-068-981-0030"
                        });
                });

            modelBuilder.Entity("Phone_Book.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Family"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Work"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Friends"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Phone_Book.Caller", b =>
                {
                    b.HasOne("Phone_Book.Category", "Category")
                        .WithMany("Callers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Phone_Book.Category", b =>
                {
                    b.Navigation("Callers");
                });
#pragma warning restore 612, 618
        }
    }
}
